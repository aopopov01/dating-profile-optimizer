apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dating-optimizer-backend-hpa
  namespace: ${NAMESPACE:-dating-optimizer-production}
  labels:
    app: dating-optimizer-backend
    component: backend
    environment: ${ENVIRONMENT:-production}
  annotations:
    autoscaling.alpha.kubernetes.io/metrics: '[{"type":"Resource","resource":{"name":"cpu","target":{"type":"Utilization","averageUtilization":70}}},{"type":"Resource","resource":{"name":"memory","target":{"type":"Utilization","averageUtilization":80}}},{"type":"Pods","pods":{"metric":{"name":"http_requests_per_second"},"target":{"type":"AverageValue","averageValue":"100"}}}]'
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dating-optimizer-backend
  minReplicas: ${MIN_REPLICAS:-2}
  maxReplicas: ${MAX_REPLICAS:-15}
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metrics - HTTP requests per second
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  # Custom metrics - Response time
  - type: Pods
    pods:
      metric:
        name: http_request_duration_seconds
      target:
        type: AverageValue
        averageValue: "0.5"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 4
        periodSeconds: 30
      selectPolicy: Max
---
apiVersion: autoscaling/v2
kind: VerticalPodAutoscaler
metadata:
  name: dating-optimizer-backend-vpa
  namespace: ${NAMESPACE:-dating-optimizer-production}
  labels:
    app: dating-optimizer-backend
    component: backend
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dating-optimizer-backend
  updatePolicy:
    updateMode: "Off"  # Recommendation mode only
  resourcePolicy:
    containerPolicies:
    - containerName: dating-optimizer-backend
      maxAllowed:
        cpu: 2
        memory: 4Gi
      minAllowed:
        cpu: 100m
        memory: 128Mi
      controlledResources: ["cpu", "memory"]