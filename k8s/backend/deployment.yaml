apiVersion: apps/v1
kind: Deployment
metadata:
  name: dating-optimizer-backend
  namespace: ${NAMESPACE:-dating-optimizer-production}
  labels:
    app: dating-optimizer-backend
    component: backend
    environment: ${ENVIRONMENT:-production}
    version: v1
    tier: backend
  annotations:
    deployment.kubernetes.io/revision: "1"
    fluxcd.io/automated: "true"
    fluxcd.io/tag.dating-optimizer-backend: glob:prod-*
spec:
  replicas: ${REPLICAS:-3}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: dating-optimizer-backend
      component: backend
      tier: backend
  template:
    metadata:
      labels:
        app: dating-optimizer-backend
        component: backend
        environment: ${ENVIRONMENT:-production}
        version: v1
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/v1/metrics"
        fluentd.io/parser-type: "json"
        config.linkerd.io/skip-inbound-ports: "9090"
        config.linkerd.io/skip-outbound-ports: "443"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        supplementalGroups: [1001]
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: dating-optimizer-backend-sa
      automountServiceAccountToken: false
      containers:
      - name: dating-optimizer-backend
        image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: METRICS_PORT
          value: "9090"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom:
        - configMapRef:
            name: dating-optimizer-backend-config
        - secretRef:
            name: dating-optimizer-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "2Gi"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health/ready
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/v1/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 15
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        - name: uploads-volume
          mountPath: /app/uploads
        - name: temp-volume
          mountPath: /app/temp
        - name: cache-volume
          mountPath: /app/cache
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 15
      initContainers:
      - name: db-migrate
        image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
        command: ["npm", "run", "migrate:latest"]
        envFrom:
        - configMapRef:
            name: dating-optimizer-backend-config
        - secretRef:
            name: dating-optimizer-secrets
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
      volumes:
      - name: logs-volume
        persistentVolumeClaim:
          claimName: dating-optimizer-logs-pvc
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: dating-optimizer-uploads-pvc
      - name: temp-volume
        emptyDir:
          sizeLimit: 2Gi
          medium: Memory
      - name: cache-volume
        emptyDir:
          sizeLimit: 1Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      nodeSelector:
        environment: ${ENVIRONMENT:-production}
        instance-type: compute-optimized
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - dating-optimizer-backend
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: instance-type
                operator: In
                values:
                - c5.large
                - c5.xlarge
                - m5.large
                - m5.xlarge
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "dedicated"
        operator: "Equal"
        value: "backend"
        effect: "NoSchedule"
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: dating-optimizer-backend